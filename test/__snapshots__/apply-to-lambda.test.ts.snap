// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Sample snapshot test 1`] = `
Object {
  "Outputs": Object {
    "ApiGatewayToLambdaLambdaRestApiEndpoint9800D4B5": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "ApiGatewayToLambdaLambdaRestApiDeploymentStageprod5DAE88D6",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204ArtifactHashB8136F6B": Object {
      "Description": "Artifact hash for asset \\"750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204\\"",
      "Type": "String",
    },
    "AssetParameters750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204S3BucketF914AAC4": Object {
      "Description": "S3 bucket for asset \\"750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204\\"",
      "Type": "String",
    },
    "AssetParameters750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204S3VersionKeyEDD17645": Object {
      "Description": "S3 key for asset version \\"750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204\\"",
      "Type": "String",
    },
    "AssetParameters96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571ArtifactHash265D22D2": Object {
      "Description": "Artifact hash for asset \\"96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571\\"",
      "Type": "String",
    },
    "AssetParameters96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571S3BucketBD1F1A99": Object {
      "Description": "S3 bucket for asset \\"96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571\\"",
      "Type": "String",
    },
    "AssetParameters96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571S3VersionKeyADE0DC96": Object {
      "Description": "S3 key for asset version \\"96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ApiGatewayToLambdaApiAccessLogGroupE2B41502": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Retention period for CloudWatchLogs LogGroups are set to 'Never Expire' to preserve customer data indefinitely",
            },
            Object {
              "id": "W84",
              "reason": "By default CloudWatchLogs LogGroups data is encrypted using the CloudWatch server-side encryption keys (AWS Managed Keys)",
            },
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "ApiGatewayToLambdaLambdaFunction8FD06B36": Object {
      "DependsOn": Array [
        "ApiGatewayToLambdaLambdaFunctionServiceRoleDefaultPolicyE794FE8B",
        "ApiGatewayToLambdaLambdaFunctionServiceRoleD76076A6",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "Lambda functions has the required permission to write CloudWatch Logs. It uses custom policy instead of arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole with tighter permissions.",
            },
            Object {
              "id": "W89",
              "reason": "This is not a rule for the general case, just for specific use cases/industries",
            },
            Object {
              "id": "W92",
              "reason": "Impossible for us to define the correct concurrency for clients",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204S3BucketF914AAC4",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204S3VersionKeyEDD17645",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters750e6528f90017f34dcd6639a7f196d5952a2377615e5716fc28942853885204S3VersionKeyEDD17645",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_SDK_USER_AGENT": "{ \\"customUserAgent\\": \\"AwsSolution/undefined/undefined\\" }",
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "LayerA7B50CFA",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "ApiGatewayToLambdaLambdaFunctionServiceRoleD76076A6",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "TracingConfig": Object {
          "Mode": "Active",
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "ApiGatewayToLambdaLambdaFunctionServiceRoleD76076A6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":log-group:/aws/lambda/*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaFunctionServiceRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiGatewayToLambdaLambdaFunctionServiceRoleDefaultPolicyE794FE8B": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W12",
              "reason": "Lambda needs the following minimum required permissions to send trace data to X-Ray and access ENIs in a VPC.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ApiGatewayToLambdaLambdaFunctionServiceRoleDefaultPolicyE794FE8B",
        "Roles": Array [
          Object {
            "Ref": "ApiGatewayToLambdaLambdaFunctionServiceRoleD76076A6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ApiGatewayToLambdaLambdaRestApiANYApiPermissionMyTestStackApiGatewayToLambdaLambdaRestApi4CB4E731ANY667057F3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiGatewayToLambdaLambdaFunction8FD06B36",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
              },
              "/",
              Object {
                "Ref": "ApiGatewayToLambdaLambdaRestApiDeploymentStageprod5DAE88D6",
              },
              "/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewayToLambdaLambdaRestApiANYApiPermissionTestMyTestStackApiGatewayToLambdaLambdaRestApi4CB4E731ANY2EC01C54": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiGatewayToLambdaLambdaFunction8FD06B36",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
              },
              "/test-invoke-stage/*/",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewayToLambdaLambdaRestApiANYBCB30DDA": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ApiGatewayToLambdaLambdaFunction8FD06B36",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "ApiGatewayToLambdaLambdaRestApiF114AB02",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewayToLambdaLambdaRestApiAccountF45E70A9": Object {
      "DependsOn": Array [
        "ApiGatewayToLambdaLambdaRestApiF114AB02",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "ApiGatewayToLambdaLambdaRestApiCloudWatchRole43F16710",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "ApiGatewayToLambdaLambdaRestApiCloudWatchRole43F16710": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams",
                    "logs:PutLogEvents",
                    "logs:GetLogEvents",
                    "logs:FilterLogEvents",
                  ],
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LambdaRestApiCloudWatchRolePolicy",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ApiGatewayToLambdaLambdaRestApiDeployment2DD5F130c089f81fa2c74583d69b5e3ed35351b5": Object {
      "DependsOn": Array [
        "ApiGatewayToLambdaLambdaRestApiproxyANY6F82FBD9",
        "ApiGatewayToLambdaLambdaRestApiproxyA23CCA24",
        "ApiGatewayToLambdaLambdaRestApiANYBCB30DDA",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W45",
              "reason": "ApiGateway has AccessLogging enabled in AWS::ApiGateway::Stage resource, but cfn_nag checkes for it in AWS::ApiGateway::Deployment resource",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "ApiGatewayToLambdaLambdaRestApiDeploymentStageprod5DAE88D6": Object {
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "ApiGatewayToLambdaApiAccessLogGroupE2B41502",
              "Arn",
            ],
          },
          "Format": "{\\"requestId\\":\\"$context.requestId\\",\\"ip\\":\\"$context.identity.sourceIp\\",\\"user\\":\\"$context.identity.user\\",\\"caller\\":\\"$context.identity.caller\\",\\"requestTime\\":\\"$context.requestTime\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"status\\":\\"$context.status\\",\\"protocol\\":\\"$context.protocol\\",\\"responseLength\\":\\"$context.responseLength\\"}",
        },
        "DeploymentId": Object {
          "Ref": "ApiGatewayToLambdaLambdaRestApiDeployment2DD5F130c089f81fa2c74583d69b5e3ed35351b5",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "LoggingLevel": "INFO",
            "ResourcePath": "/*",
          },
        ],
        "RestApiId": Object {
          "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
        },
        "StageName": "prod",
        "TracingEnabled": true,
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "ApiGatewayToLambdaLambdaRestApiF114AB02": Object {
      "Properties": Object {
        "EndpointConfiguration": Object {
          "Types": Array [
            "EDGE",
          ],
        },
        "Name": "LambdaRestApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "ApiGatewayToLambdaLambdaRestApiUsagePlanCD03FACA": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
            },
            "Stage": Object {
              "Ref": "ApiGatewayToLambdaLambdaRestApiDeploymentStageprod5DAE88D6",
            },
            "Throttle": Object {},
          },
        ],
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "ApiGatewayToLambdaLambdaRestApiproxyA23CCA24": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "ApiGatewayToLambdaLambdaRestApiF114AB02",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "ApiGatewayToLambdaLambdaRestApiproxyANY6F82FBD9": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "ApiGatewayToLambdaLambdaFunction8FD06B36",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "ApiGatewayToLambdaLambdaRestApiproxyA23CCA24",
        },
        "RestApiId": Object {
          "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "ApiGatewayToLambdaLambdaRestApiproxyANYApiPermissionMyTestStackApiGatewayToLambdaLambdaRestApi4CB4E731ANYproxy3055C3B8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiGatewayToLambdaLambdaFunction8FD06B36",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
              },
              "/",
              Object {
                "Ref": "ApiGatewayToLambdaLambdaRestApiDeploymentStageprod5DAE88D6",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ApiGatewayToLambdaLambdaRestApiproxyANYApiPermissionTestMyTestStackApiGatewayToLambdaLambdaRestApi4CB4E731ANYproxyCC2C95F9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ApiGatewayToLambdaLambdaFunction8FD06B36",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "ApiGatewayToLambdaLambdaRestApiF114AB02",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "LayerA7B50CFA": Object {
      "Properties": Object {
        "CompatibleRuntimes": Array [
          "nodejs14.x",
        ],
        "Content": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571S3BucketBD1F1A99",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571S3VersionKeyADE0DC96",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters96d939069712331b511313ea95941ccf9c68f4435058b93cfb93039e13e65571S3VersionKeyADE0DC96",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "This layer configures AWS Node SDK initialization",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
  },
}
`;
